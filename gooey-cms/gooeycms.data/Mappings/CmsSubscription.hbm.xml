<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2">
  <class name="Gooeycms.Data.Model.Subscription.CmsSubscriptionPlan,gooeycms.data" table="Subscription_Plans">
    <id name="Id" column="id" type="Int32" unsaved-value="0">
      <generator class="native" />
    </id>
    <property column="sku" name="SKU" type="String" />
    <property column="name" name="Name" type="String" />
    <property column="price" name="Price" type="Decimal" />
    <property column="available" name="IsAvailable" type="Boolean" />
    <property column="is_system_plan" name="IsSystemPlan" type="Boolean" />    
    <property column="allowed_pages" name="MaxAllowedPages" type="Int32" />
    <property column="is_javascript_allowed" name="IsJavascriptAllowed" type="Boolean" />
    <property column="is_images_allowed" name="IsExternalImagesAllowed" type="Boolean" />
    <property column="is_options_allowed" name="IsPlanOptionsAllowed" type="Boolean" />
    <property column="is_email_only" name="IsLeadsEmailOnly" type="Boolean" />
  </class>

  <class name="Gooeycms.Data.Model.Subscription.CmsSubscription,gooeycms.data" table="Subscriptions">
    <id name="Id" column="id" type="Int32" unsaved-value="0">
      <generator class="native" />
    </id>
    <property column="guid" name="Guid" type="String" />    
    <property column="signup_date" name="Created" type="DateTime" />
    <property column="culture" name="Culture" type="String" />    
    <property column="subdomain" name="Subdomain" type="String" />
    <property column="custom_domain" name="Domain" type="String" />
    <property column="staging_domain" name="StagingDomain" type="String" />
    <property column="expires" name="Expires" type="DateTime" />
    <property column="disabled" name="IsDisabled" type="Boolean" />
    <property column="paypal_profileid" name="PaypalProfileId" type="String" />
    <property column="salesforce_addon" name="IsSalesforceEnabled" type="Boolean" />
    <property column="campaign_addon" name="IsCampaignEnabled" type="Boolean" />
    <property column="generic_addon" name="IsGenericOptionsEnabled" type="Boolean" />
    <property column="max_phone_numbers" name="MaxPhoneNumbers" type="Int32" />
    <property column="is_demo" name="IsDemo" type="Boolean" />
    <property column="is_dirty" name="IsDirty" type="Boolean" />
    <property column="is_remote_support" name="IsRemoteSupportEnabled" type="Boolean" />
    <many-to-one column="primary_user_guid" property-ref="Guid" name="PrimaryUser" class="Gooeycms.Data.Model.Subscription.UserInfo, gooeycms.data" />
    <many-to-one column="subscription_plan_sku" property-ref="SKU" name="SubscriptionPlan" class="Gooeycms.Data.Model.Subscription.CmsSubscriptionPlan, gooeycms.data" />    
  </class>
  
  <class name="Gooeycms.Data.Model.Subscription.CmsSubscriptionPhoneNumber, gooeycms.data" table="Subscription_Phone_Numbers">
    <id name="Id" column="id" type="Int32" unsaved-value="0">
      <generator class="native" />
    </id>
    <property column="subscription_guid" name="SubscriptionId" type="String" />
    <property column="phone_number" name="PhoneNumber" type="String" />
    <property column="friendly_phone_number" name="FriendlyPhoneNumber" type="String" />
    <property column="sid" name="Sid" type="String" />
    <property column="account_sid" name="AccountSid" type="String" />
    <property column="twilio_info_url" name="TwilioInfoUrl" type="String" />
    <property column="forward_number" name="ForwardNumber" type="String" />
  </class>

  <sql-query name="CmsSubscriptionByUserId">
    <return alias="subscription"
            class="Gooeycms.Data.Model.Subscription.CmsSubscription,gooeycms.data"/>
    <![CDATA[  
    SELECT {subscription.*} FROM Subscriptions {subscription} JOIN User_Subscriptions us 
    ON {subscription}.Id = us.subscription_id
    WHERE us.user_id = :userId
    ]]>
  </sql-query>

  <sql-query name="CmsSubscriptionUpcomingRenewals">
    <return alias="subscription"
            class="Gooeycms.Data.Model.Subscription.CmsSubscription,gooeycms.data"/>
    <![CDATA[  
    select {subscription.*}
    from Subscriptions {subscription}
    where
    is_demo = 0
    and
    DATEADD(d, DATEDIFF(d, 0, signup_date), 0) < DATEADD(d, DATEDIFF(d, 0, getdate()), 0)
    and
    (
    dateadd(mm,datediff(mm,signup_date,getdate()),signup_date)
    between
    DATEADD(d, DATEDIFF(d, 0, getdate()), 0) and dateadd(dd,:timeframe,getdate())
    or
    dateadd(mm,datediff(mm,signup_date,getdate()) + 1,signup_date)
    between
    DATEADD(d, DATEDIFF(d, 0, getdate()), 0) and dateadd(dd,:timeframe,getdate())
    )
    order by datepart(dd,signup_date) desc;    
    ]]>
  </sql-query>
</hibernate-mapping>